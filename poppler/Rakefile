require 'rake/clean'
CLEAN.include '**/*.o'
CLEAN.include "**/*.#{Config::MAKEFILE_CONFIG['DLEXT']}"
CLOBBER.include 'doc'
CLOBBER.include '**/*.log'
CLOBBER.include '**/Makefile'
CLOBBER.include '**/extconf.h'

# Determine the current version of the software
def ruby_poppler_version
  require 'glib2'
  GLib::BINDING_VERSION.join('.')
end

CURRENT_VERSION = ruby_poppler_version

desc "Default Task (Test project)"
task :default => :test

# Make tasks -----------------------------------------------------
make_program = (/mswin/ =~ RUBY_PLATFORM) ? 'nmake' : 'make'
MAKECMD = ENV['MAKE_CMD'] || make_program
MAKEOPTS = ENV['MAKE_OPTS'] || ''

POPPLER_SO = "src/poppler.#{Config::MAKEFILE_CONFIG['DLEXT']}"

file 'Makefile' => 'extconf.rb' do
  sh "ruby extconf.rb #{ENV['EXTCONF_OPTS']}"
end

def make(target = '')
  pid = system("#{MAKECMD} #{MAKEOPTS} #{target}")
  $?.exitstatus
end

# Let make handle dependencies between c/o/so - we'll just run it. 
file POPPLER_SO => (['Makefile'] + Dir['src/*.c'] + Dir['src/*.h']) do
  m = make
  fail "Make failed (status #{m})" unless m == 0
end

desc "Configure poppler"
task :configure => ['Makefile']

desc "Compile the shared object"
task :compile => [POPPLER_SO]

desc "Run poppler tests"
task :test => :compile do
  sh "ruby test/run-test.rb"
end

desc 'Generate gem specification'
task :gemspec do
  require 'erb'
  tspec = ERB.new(File.read(File.join(File.dirname(__FILE__),'src','poppler.gemspec.erb')))
  File.open(File.join(File.dirname(__FILE__),'poppler.gemspec'),'wb') do|f|
    f << tspec.result
  end
end

desc 'Build gem'
task :package => :gemspec do
  require 'rubygems/specification'
  spec_source = File.read File.join(File.dirname(__FILE__),'poppler.gemspec')
  spec = nil
  # see: http://gist.github.com/16215
  Thread.new { spec = eval("$SAFE = 3\n#{spec_source}") }.join
  spec.validate
  Gem::Builder.new(spec).build
end

